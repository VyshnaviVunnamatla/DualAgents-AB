// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // Changed from sqlite to postgresql
  url      = env("DATABASE_URL")
}

model User {
  id           String @id @default(uuid())
  email        String @unique
  password     String
  fullName     String
  role         String @default("user") // "user" or "admin"
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  searchHistories SearchHistory[]
  notes         Note[]
  reminders     Reminder[]
  bookmarks     Bookmark[]
}

model SearchHistory {
  id           String @id @default(uuid())
  agentId      String // "agent-1" or "agent-2"
  question     String
  answer       String
  sessionId    String? // Groups related conversations
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  createdBy    User @relation(fields: [createdById], references: [id])
  createdById  String
}

model Note {
  id           String @id @default(uuid())
  title        String
  content      String
  category     String @default("personal")
  tags         String? // Stored as comma-separated string, or use Prisma JSON type if your DB supports
  isPinned     Boolean @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  createdBy    User @relation(fields: [createdById], references: [id])
  createdById  String
}

model Reminder {
  id           String @id @default(uuid())
  title        String
  description  String?
  dueDate      DateTime
  priority     String @default("medium") // "low", "medium", "high", "urgent"
  category     String @default("personal") // "personal", "work", "health", etc.
  isCompleted  Boolean @default(false)
  completionDate DateTime?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  createdBy    User @relation(fields: [createdById], references: [id])
  createdById  String
}

model Bookmark {
  id           String @id @default(uuid())
  title        String
  url          String
  description  String?
  category     String @default("other")
  faviconUrl   String?
  isPinned     Boolean @default(false)
  visitCount   Int @default(0)
  lastVisited  DateTime @default(now()) // changed default to now()
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  createdBy    User @relation(fields: [createdById], references: [id])
  createdById  String
}
